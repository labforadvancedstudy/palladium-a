// Test generic enum parsing

enum Option<T> {
    Some(T),
    None,
}

fn main() {
    // For now, skip explicit type annotation until full generic inference is implemented
    let x = Option::Some(42);
    
    match x {
        Option::Some(val) => {
            print("Value: ");
            print_int(val);
        }
        Option::None => {
            print("No value");
        }
    }
}