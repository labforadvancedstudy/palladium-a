// Test generic enum type checking

enum Option<T> {
    Some(T),
    None,
}

fn main() {
    // Test with i32
    let x = Option::Some(42);
    
    match x {
        Option::Some(val) => {
            // val should be inferred as i32
            print_int(val);
        }
        Option::None => {
            print("None");
        }
    }
    
    // Test with String
    let y = Option::Some("hello");
    
    match y {
        Option::Some(s) => {
            // s should be inferred as String  
            print(s);
        }
        Option::None => {
            print("None");
        }
    }
}