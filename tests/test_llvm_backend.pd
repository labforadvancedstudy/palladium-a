// Test LLVM backend enhancements

fn test_i32() -> i32 {
    let x: i32 = 42;
    let y: i32 = 10;
    return x + y;
}

fn test_bool() -> bool {
    let a = true;
    return a;
}

fn test_array() -> i64 {
    let arr = [10, 20, 30, 40, 50];
    
    // Test array indexing
    let sum = arr[0] + arr[2] + arr[4];
    return sum; // Should be 90
}

fn test_while_loop() -> i64 {
    let mut sum = 0;
    let mut i = 1;
    
    while i <= 10 {
        sum = sum + i;
        i = i + 1;
    }
    
    return sum; // Should be 55
}

fn test_for_loop() -> i64 {
    let mut sum = 0;
    
    for i in 0..10 {
        sum = sum + i;
    }
    
    return sum; // Should be 45
}

fn main() -> i64 {
    let test1 = test_i32();
    let test2 = 1; // test_bool returns true
    let test3 = test_array();
    let test4 = test_while_loop();
    let test5 = test_for_loop();
    
    print_int(test1);  // 52
    print_int(test2);  // 1
    print_int(test3);  // 90
    print_int(test4);  // 55
    print_int(test5);  // 45
    
    return 0;
}
