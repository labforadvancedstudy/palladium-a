// Simple exhaustiveness test

enum Bool {
    True,
    False,
}

fn main() {
    let b = Bool::True;
    
    // This match is exhaustive
    match b {
        Bool::True => print("true"),
        Bool::False => print("false"),
    }
    
    // This match is also exhaustive (with wildcard)
    match b {
        Bool::True => print("true"),
        _ => print("not true"),
    }
}