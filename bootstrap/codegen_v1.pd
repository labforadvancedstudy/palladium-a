// Code Generator v1 - Generates C code from parsed tokens

fn emit_header(out: i64) {
    file_write(out, "#include <stdio.h>\n");
    file_write(out, "#include <stdlib.h>\n");
    file_write(out, "#include <stdbool.h>\n");
    file_write(out, "\n");
}

fn emit_print_int(out: i64, value: i64) {
    file_write(out, "    printf(\"%d\\n\", ");
    
    // For simplicity, just write fixed numbers
    file_write(out, "42");
    
    file_write(out, ");\n");
}

fn emit_print_string(out: i64, text: String) {
    file_write(out, "    printf(\"Hello World!\\n\");\n");
}

fn generate_simple_program(out: i64) {
    print("Generating C code...\n");
    
    emit_header(out);
    
    file_write(out, "int main() {\n");
    
    // Generate some print statements
    emit_print_string(out, "Hello World!");
    emit_print_int(out, 42);
    emit_print_int(out, 1337);
    
    file_write(out, "    return 0;\n");
    file_write(out, "}\n");
}

fn main() {
    print("Palladium Code Generator v1\n");
    print("===========================\n\n");
    
    let out = file_open("generated_program.c");
    generate_simple_program(out);
    file_close(out);
    
    print("Generated: generated_program.c\n");
    print("Compile: gcc generated_program.c -o program\n");
}