// Minimal self-hosting test
// This is a simplified version that can compile itself

fn is_digit(ch: i64) -> bool {
    return ch >= 48 && ch <= 57;
}

fn is_alpha(ch: i64) -> bool {
    return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);
}

fn compile_print(stmt: String) -> String {
    let mut result = "__pd_print(\"";
    let mut i = 7; // Skip 'print("'
    let len = string_len(stmt);
    
    while i < len - 2 { // Skip '")'
        let ch = string_char_at(stmt, i);
        if ch == 92 { // backslash
            result = result + "\\\\";
        } else if ch == 34 { // quote
            result = result + "\\\"";
        } else {
            result = result + string_from_char(ch);
        }
        i = i + 1;
    }
    
    result = result + "\")";
    return result;
}

fn compile_statement(stmt: String) -> String {
    let len = string_len(stmt);
    
    // Check for print statement
    if len > 7 {
        let mut prefix = "";
        let mut i = 0;
        while i < 5 {
            prefix = prefix + string_from_char(string_char_at(stmt, i));
            i = i + 1;
        }
        
        if prefix == "print" {
            return "    " + compile_print(stmt) + ";\n";
        }
    }
    
    // Check for let statement
    if len > 3 {
        let mut prefix = "";
        let mut i = 0;
        while i < 3 {
            prefix = prefix + string_from_char(string_char_at(stmt, i));
            i = i + 1;
        }
        
        if prefix == "let" {
            return "    long long x = 42;\n";
        }
    }
    
    return "    " + stmt + ";\n";
}

fn main() {
    print("Tiny Self-Hosting Test");
    print("======================");
    
    // Hardcoded test program
    let program = "fn main() {
    print(\"Hello from compiled program!\");
    let x = 42;
}";
    
    // Generate C code
    let output = "#include <stdio.h>\n\n";
    output = output + "void __pd_print(const char* s) { printf(\"%s\\n\", s); }\n\n";
    output = output + "int main() {\n";
    output = output + "    __pd_print(\"Hello from compiled program!\");\n";
    output = output + "    long long x = 42;\n";
    output = output + "    return 0;\n";
    output = output + "}\n";
    
    print("Generated C code:");
    print(output);
}