name: Nightly Build

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # Build nightly release
  nightly:
    name: Nightly Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: dtolnay/rust-toolchain@nightly
    
    - name: Check if there are new commits
      id: check
      run: |
        git fetch --tags
        LAST_NIGHTLY=$(git tag -l 'nightly-*' | sort -V | tail -n1 || echo "")
        if [ -z "$LAST_NIGHTLY" ]; then
          echo "should_build=true" >> $GITHUB_OUTPUT
        else
          COMMITS=$(git rev-list $LAST_NIGHTLY..HEAD --count)
          if [ "$COMMITS" -gt 0 ]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi
        fi
    
    - name: Build with nightly features
      if: steps.check.outputs.should_build == 'true'
      run: |
        cargo build --release
        cargo test --release
    
    - name: Run extended tests
      if: steps.check.outputs.should_build == 'true'
      run: |
        # Test all examples
        for example in examples/**/*.pd; do
          ./target/release/palladium "$example" -o temp.c || true
          rm -f temp.c
        done
        
        # Test bootstrap compilers
        cd bootstrap/v3_incremental
        make test-all || true
    
    - name: Create nightly tag
      if: steps.check.outputs.should_build == 'true'
      run: |
        DATE=$(date +'%Y%m%d')
        TAG="nightly-$DATE"
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag -a "$TAG" -m "Nightly build $DATE"
        git push origin "$TAG"
    
    - name: Create nightly release
      if: steps.check.outputs.should_build == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: nightly-${{ steps.date.outputs.date }}
        name: Nightly Build
        body: |
          This is an automated nightly build of Palladium.
          
          **Warning**: This build may be unstable and is not recommended for production use.
          
          Built from commit: ${{ github.sha }}
        prerelease: true
        files: |
          target/release/palladium
          
  # Clean up old nightly releases
  cleanup:
    name: Cleanup Old Nightlies
    runs-on: ubuntu-latest
    needs: nightly
    steps:
    - uses: actions/checkout@v4
    
    - name: Delete old nightly releases
      uses: dev-drprasad/delete-older-releases@v0.3.2
      with:
        keep_latest: 7
        delete_tag_pattern: "nightly-"
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}