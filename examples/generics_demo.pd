// Generics demo for Palladium

// Generic identity function
pub fn identity<T>(x: T) -> T {
    return x;
}

// Generic swap function
pub fn swap<T>(mut a: T, mut b: T) {
    let temp = a;
    a = b;
    b = temp;
}

// Generic function to get first element
pub fn first<T>(arr: [T; 5]) -> T {
    return arr[0];
}

fn main() {
    // Test with integers
    let x: i64 = 42;
    let y = identity(x);
    print_int(y);
    
    // Test with strings
    let s = "Hello";
    let s2 = identity(s);
    print(s2);
    
    // Test with arrays
    let numbers = [1, 2, 3, 4, 5];
    let first_num = first(numbers);
    print_int(first_num);
    
    print("Generic functions are working!");
}