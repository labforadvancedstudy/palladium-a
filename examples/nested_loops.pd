// Test break and continue in nested loops
fn main() {
    // Test 1: Break in nested for loops
    print("Testing break in nested for loops:");
    let outer = [1, 2, 3];
    let inner = [10, 20, 30];
    
    for i in outer {
        print("Outer:");
        print_int(i);
        for j in inner {
            if j == 20 {
                print("Breaking inner loop at 20");
                break;
            }
            print("  Inner:");
            print_int(j);
        }
    }
    
    // Test 2: Continue in nested loops
    print("");
    print("Testing continue in nested loops:");
    let nums1 = [1, 2, 3, 4, 5];
    let nums2 = [1, 2, 3, 4, 5];
    
    for i in nums1 {
        if i == 3 {
            continue;  // Skip when i is 3
        }
        for j in nums2 {
            if j == 2 {
                continue;  // Skip when j is 2
            }
            if i == j {
                print("Found match:");
                print_int(i);
            }
        }
    }
    
    // Test 3: Mixed while and for loops
    print("");
    print("Testing break/continue in mixed loops:");
    let arr = [1, 2, 3, 4, 5];
    let mut count = 0;
    
    while count < 3 {
        print("While iteration:");
        print_int(count);
        
        for n in arr {
            if n == 2 {
                continue;  // Skip 2
            }
            if n > 3 {
                break;     // Stop at numbers > 3
            }
            print("  For value:");
            print_int(n);
        }
        
        count = count + 1;
    }
    
    // Test 4: Fibonacci with break condition
    print("");
    print("Fibonacci sequence with break:");
    let mut a = 0;
    let mut b = 1;
    let mut i = 0;
    
    while i < 20 {
        if a > 100 {
            print("Breaking at value > 100");
            break;
        }
        
        print_int(a);
        
        let temp = a + b;
        a = b;
        b = temp;
        i = i + 1;
    }
}