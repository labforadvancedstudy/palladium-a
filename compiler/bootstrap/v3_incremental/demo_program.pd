// Demo program to test our bootstrap compiler
// Uses arrays, control flow, and function calls

fn calculate_average(nums: [i64; 5]) -> i64 {
    let mut sum = 0;
    let mut i = 0;
    
    while (i < 5) {
        sum = sum + nums[i];
        i = i + 1;
    }
    
    return sum / 5;
}

fn find_max(nums: [i64; 5]) -> i64 {
    let mut max = nums[0];
    let mut i = 1;
    
    while (i < 5) {
        if (nums[i] > max) {
            max = nums[i];
        }
        i = i + 1;
    }
    
    return max;
}

fn main() {
    print("Palladium Demo Program");
    print("=====================");
    
    // Initialize an array
    let mut scores: [i64; 5] = [85, 92, 78, 95, 88];
    
    print("Student Test Scores:");
    let mut i = 0;
    while (i < 5) {
        print("Student " + int_to_string(i + 1) + ": " + int_to_string(scores[i]));
        i = i + 1;
    }
    
    // Calculate average (inline for now since tiny_v16 doesn't support function params)
    let mut sum = 0;
    i = 0;
    while (i < 5) {
        sum = sum + scores[i];
        i = i + 1;
    }
    let average = sum / 5;
    
    print("");
    print("Class Average: " + int_to_string(average));
    
    // Find maximum score
    let mut max = scores[0];
    i = 1;
    while (i < 5) {
        if (scores[i] > max) {
            max = scores[i];
        }
        i = i + 1;
    }
    
    print("Highest Score: " + int_to_string(max));
    
    // Count passing grades (>= 80)
    let mut passing_count = 0;
    i = 0;
    while (i < 5) {
        if (scores[i] >= 80) {
            passing_count = passing_count + 1;
        }
        i = i + 1;
    }
    
    print("Passing Students: " + int_to_string(passing_count));
    
    // Bonus points scenario
    print("");
    print("Applying 5-point bonus to all scores...");
    
    i = 0;
    while (i < 5) {
        scores[i] = scores[i] + 5;
        i = i + 1;
    }
    
    print("Updated Scores:");
    i = 0;
    while (i < 5) {
        if (scores[i] > 100) {
            print("Student " + int_to_string(i + 1) + ": 100 (capped)");
        } else {
            print("Student " + int_to_string(i + 1) + ": " + int_to_string(scores[i]));
        }
        i = i + 1;
    }
    
    print("");
    print("Demo completed successfully!");
}