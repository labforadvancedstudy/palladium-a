// Control flow test for self-hosting compiler
// Tests if/else, while loops, and nested control structures

fn max(a: i64, b: i64) -> i64 {
    if a > b {
        return a;
    } else {
        return b;
    }
}

fn factorial(n: i64) -> i64 {
    if n <= 1 {
        return 1;
    }
    return n * factorial(n - 1);
}

fn count_down(n: i64) {
    let mut i = n;
    while i > 0 {
        print_int(i);
        i = i - 1;
    }
    print("Blast off!");
}

fn main() {
    print("=== Control Flow Test ===");
    
    // Test if/else
    let a = 42;
    let b = 17;
    let m = max(a, b);
    print(string_concat("Max of 42 and 17 is: ", int_to_string(m)));
    
    // Test recursion
    let n = 5;
    let fact = factorial(n);
    print(string_concat("Factorial of 5 is: ", int_to_string(fact)));
    
    // Test while loop
    print("Countdown:");
    count_down(3);
    
    // Test nested control flow
    let mut x = 0;
    while x < 3 {
        if x == 1 {
            print("Middle iteration");
        } else {
            print(string_concat("Iteration: ", int_to_string(x)));
        }
        x = x + 1;
    }
}